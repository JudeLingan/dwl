*** config.def.h	2025-02-04 04:19:04.681113814 -0500
--- config.h	2025-02-04 11:13:03.696781991 -0500
***************
*** 35,41 ****
  static const Layout layouts[] = {
  	/* symbol     arrange function */
  	{ "|w|",      btrtile },
- 	{ "[]=",      tile },
  	{ "><>",      NULL },    /* no layout function means floating behavior */
  	{ "[M]",      monocle },
  };
--- 35,40 ----
***************
*** 111,117 ****
  static const enum libinput_config_tap_button_map button_map = LIBINPUT_CONFIG_TAP_MAP_LRM;
  
  /* If you want to use the windows key for MODKEY, use WLR_MODIFIER_LOGO */
! #define MODKEY WLR_MODIFIER_ALT
  
  #define TAGKEYS(KEY,SKEY,TAG) \
  	{ MODKEY,                    KEY,            view,            {.ui = 1 << TAG} }, \
--- 110,116 ----
  static const enum libinput_config_tap_button_map button_map = LIBINPUT_CONFIG_TAP_MAP_LRM;
  
  /* If you want to use the windows key for MODKEY, use WLR_MODIFIER_LOGO */
! #define MODKEY WLR_MODIFIER_LOGO
  
  #define TAGKEYS(KEY,SKEY,TAG) \
  	{ MODKEY,                    KEY,            view,            {.ui = 1 << TAG} }, \
***************
*** 123,156 ****
  #define SHCMD(cmd) { .v = (const char*[]){ "/bin/sh", "-c", cmd, NULL } }
  
  /* commands */
! static const char *termcmd[] = { "foot", NULL };
! static const char *menucmd[] = { "wmenu-run", NULL };
  
  static const Key keys[] = {
  	/* Note that Shift changes certain key codes: c -> C, 2 -> at, etc. */
  	/* modifier                  key                 function        argument */
! 	{ MODKEY,                    XKB_KEY_p,          spawn,          {.v = menucmd} },
! 	{ MODKEY|WLR_MODIFIER_SHIFT, XKB_KEY_Return,     spawn,          {.v = termcmd} },
  	{ MODKEY,                    XKB_KEY_b,          togglebar,      {0} },
! 	{ MODKEY,                    XKB_KEY_j,          focusstack,     {.i = +1} },
! 	{ MODKEY,                    XKB_KEY_k,          focusstack,     {.i = -1} },
! 	{ MODKEY|WLR_MODIFIER_CTRL,  XKB_KEY_h,          focusdir,       {.ui = 0} },
! 	{ MODKEY|WLR_MODIFIER_CTRL,  XKB_KEY_l,          focusdir,       {.ui = 1} },
! 	{ MODKEY|WLR_MODIFIER_CTRL,  XKB_KEY_k,          focusdir,       {.ui = 2} },
! 	{ MODKEY|WLR_MODIFIER_CTRL,  XKB_KEY_j,          focusdir,       {.ui = 3} },
  	{ MODKEY,                    XKB_KEY_i,          incnmaster,     {.i = +1} },
  	{ MODKEY,                    XKB_KEY_d,          incnmaster,     {.i = -1} },
  	{ MODKEY,                    XKB_KEY_h,          setmfact,       {.f = -0.05f} },
  	{ MODKEY,                    XKB_KEY_l,          setmfact,       {.f = +0.05f} },
  	{ MODKEY,                    XKB_KEY_Return,     zoom,           {0} },
  	{ MODKEY,                    XKB_KEY_Tab,        view,           {0} },
! 	{ MODKEY|WLR_MODIFIER_SHIFT, XKB_KEY_C,          killclient,     {0} },
! 	{ MODKEY,                    XKB_KEY_t,          setlayout,      {.v = &layouts[0]} },
! 	{ MODKEY,                    XKB_KEY_f,          setlayout,      {.v = &layouts[1]} },
! 	{ MODKEY,                    XKB_KEY_m,          setlayout,      {.v = &layouts[2]} },
! 	{ MODKEY,                    XKB_KEY_space,      setlayout,      {0} },
! 	{ MODKEY|WLR_MODIFIER_SHIFT, XKB_KEY_space,      togglefloating, {0} },
! 	{ MODKEY,                    XKB_KEY_e,         togglefullscreen, {0} },
  	{ MODKEY,                    XKB_KEY_0,          view,           {.ui = ~0} },
  	{ MODKEY|WLR_MODIFIER_SHIFT, XKB_KEY_parenright, tag,            {.ui = ~0} },
  	{ MODKEY,                    XKB_KEY_comma,      focusmon,       {.i = WLR_DIRECTION_LEFT} },
--- 122,159 ----
  #define SHCMD(cmd) { .v = (const char*[]){ "/bin/sh", "-c", cmd, NULL } }
  
  /* commands */
! static const char *termcmd[] = { "alacritty", NULL };
! static const char *menucmd[] = { "wofi", "--show", "drun", NULL };
! static const char *brsrcmd[] = { "firefox", NULL};
  
  static const Key keys[] = {
  	/* Note that Shift changes certain key codes: c -> C, 2 -> at, etc. */
  	/* modifier                  key                 function        argument */
! 	{ MODKEY,                    XKB_KEY_space,          spawn,          {.v = menucmd} },
! 	{ MODKEY,					 XKB_KEY_Return,     spawn,          {.v = termcmd} },
! 	{ MODKEY,					 XKB_KEY_b,			 spawn,          {.v = brsrcmd} },
! 	{ MODKEY|WLR_MODIFIER_ALT,	 XKB_KEY_b,			 spawn,          {.v = brsrcmd} },
  	{ MODKEY,                    XKB_KEY_b,          togglebar,      {0} },
! 	{ MODKEY|WLR_MODIFIER_CTRL,  XKB_KEY_j,          focusstack,     {.i = +1} },
! 	{ MODKEY|WLR_MODIFIER_CTRL,  XKB_KEY_k,          focusstack,     {.i = -1} },
! 	{ MODKEY,				     XKB_KEY_h,          focusdir,       {.ui = 0} },
! 	{ MODKEY,				     XKB_KEY_l,          focusdir,       {.ui = 1} },
! 	{ MODKEY,				     XKB_KEY_k,          focusdir,       {.ui = 2} },
! 	{ MODKEY,				     XKB_KEY_j,          focusdir,       {.ui = 3} },
! 
  	{ MODKEY,                    XKB_KEY_i,          incnmaster,     {.i = +1} },
  	{ MODKEY,                    XKB_KEY_d,          incnmaster,     {.i = -1} },
  	{ MODKEY,                    XKB_KEY_h,          setmfact,       {.f = -0.05f} },
  	{ MODKEY,                    XKB_KEY_l,          setmfact,       {.f = +0.05f} },
  	{ MODKEY,                    XKB_KEY_Return,     zoom,           {0} },
  	{ MODKEY,                    XKB_KEY_Tab,        view,           {0} },
! 	{ MODKEY,					 XKB_KEY_w,          killclient,     {0} },
! 	{ MODKEY|WLR_MODIFIER_SHIFT, XKB_KEY_t,          setlayout,      {.v = &layouts[0]} },
! 	{ MODKEY|WLR_MODIFIER_SHIFT, XKB_KEY_v,          setlayout,      {.v = &layouts[1]} },
! 	{ MODKEY|WLR_MODIFIER_SHIFT, XKB_KEY_f,          setlayout,      {.v = &layouts[2]} },
! 	//{ MODKEY|WLR_MODIFIER_SHIFT, XKB_KEY_t,		     setlayout,      {0} },
! 	{ MODKEY,					 XKB_KEY_v,		     togglefloating, {0} },
! 	{ MODKEY,                    XKB_KEY_f,          togglefullscreen, {0} },
  	{ MODKEY,                    XKB_KEY_0,          view,           {.ui = ~0} },
  	{ MODKEY|WLR_MODIFIER_SHIFT, XKB_KEY_parenright, tag,            {.ui = ~0} },
  	{ MODKEY,                    XKB_KEY_comma,      focusmon,       {.i = WLR_DIRECTION_LEFT} },
